class Solution {
    public String intToRoman(int num) {
        
        int temp=num;
        int dig=1;
        String str="";
        int cnt=1;
        
        while(temp!=0){
           int N= (temp%10)*dig;
           
         if(dig==N){
               str=helper(dig)+str;
           }
       
         else if(N<=3*dig){

               while(cnt*dig<=N){
               str=helper(dig)+str;
               cnt++;
               }
               cnt=1;
           }
           
         else  if(N==4*dig){
               str=helper(5*dig)+str;
               str=helper(dig)+str;

           }
           
         else if(N==5*dig){
                str=helper(5*dig)+str;
           }

         else  if(N>5*dig&&N<=8*dig){
               while(5*dig+cnt*dig<=N){
                   str=helper(dig)+str;
               cnt++;
               }
               cnt=1;
               str=helper(5*dig)+str;

           }

         else   if(N==9*dig){
                    str=helper(10*dig)+str;
               str=helper(dig)+str;
           }

           dig=dig*10;
           temp=temp/10;
     
        }
        return str;
    }




    public String helper(int c){
        if(c==1){
    
            return "I";
        }
         else if(c==5){
    
            return "V";
        }
                 else if(c==10){
    
            return "X";
        }
                 else if(c==50){
    
            return "L";
        }
                 else if(c==100){
    
            return "C";
        }
                 else if(c==500){
    
            return "D";
        }
                 else if(c==1000){
    
            return "M";
        }
        else{
            return "z";
        }
    }
}




https://leetcode.com/problems/integer-to-roman/description/