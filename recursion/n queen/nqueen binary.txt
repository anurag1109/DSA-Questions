
function validate(board, i, j) {
     
 
    for (let c = 1; c <= j; c++) {
        if (board[i - 1] === 1) return false;
    }
     
    for (let r = 1; r <= i; r++) {
        if (board[r - 1][j - 1] === 1) return false;
    }
     

    let c = j;
    let r = i;
    while (c !== 0 && r !== 0) {
        if (board[r - 1] === 1) return false;
        r--;
        c--;
    }
     

    c = j;
    r = i;
    while (c !== board.length + 1 && r !== 0) {
        if (board[r - 1] === 1) return false;
        r--;
        c++;
    }
 
    return true;
}
 

function n_queen(n) { 
    let board = Array(n).fill().map(() => Array(n).fill(0));
    let queens_positions = [];
    let j = 1;
    for (let i = 1; i <= board.length; i++) {
        for (; j <= board.length; j++) {
            if (validate(board, i, j)) {
                board[i - 1][j - 1] = 1;
                queens_positions.push([i, j]);
                break;
            }
        }
        j = 1;
        if (queens_positions.length !== i) {
            if (queens_positions.length > 0) {
                let Q_last = queens_positions[queens_positions.length - 1];
                queens_positions.pop();  
                board[Q_last[0] - 1][Q_last[1] - 1] = 0;
                i = Q_last[0] - 1; 
                j = Q_last[1] + 1; 
            } }
        if (i === board.length) {
            print(board);
            console.log('');
            if (queens_positions.length > 0) {
                let Q_last = queens_positions[queens_positions.length - 1]; 
                queens_positions.pop();
                board[Q_last[0] - 1][Q_last[1] - 1] = 0;
                i = Q_last[0] - 1;  
                j = Q_last[1] + 1; 
            }
        }
    }
}
 

function print(board) {

    let count = 0;
    for (let i = 0; i < board.length; i++) {
        for (let j = 0; j < board[i].length; j++) {
            if (board[i][j] === 1) count++;
        }
    }
         if (count !== board.length) return;
     
    for (let i = 0; i < board.length; i++) {
        let row = '';
        for (let j = 0; j < board[i].length; j++) {
            row += board[i][j] + ' ';
        }
        console.log(row);
    }
}
 

const n = 4;
 
// Function call
n_queen(n);
 
 