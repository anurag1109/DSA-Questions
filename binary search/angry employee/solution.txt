function runProgram(input){
	input=input.trim().split("\n")
	tc=+input[0]
	let line=1
	for(let i=0;i<tc;i++){
	    let [n,c]=input[line].trim().split(" ").map(Number)
	    line++
	    let arr=[]
	   for(let j=0;j<n;j++){
	       arr.push(+input[line++])
	   }
	   arr.sort((a,b)=>a-b)
	    console.log(largestMinDistance(arr,n,c))
    }
}


function largestMinDistance(tables, n, c) { 
    low = 0,
    //my search space
    high = tables[n-1] - tables[0];
    ans = -1
    while (low <= high) {
     mid = Math.floor((low + high)/2);
     if (check(tables, n, c, mid)) {
     ans = mid;
     low = mid + 1;
     } else {
     high = mid - 1;
     }
    }
    return ans
}


function check(tables, n, c, mid){
    count = 1,
    pos = tables[0];
    for (let i = 1; i < n; i++) {
     if (tables[i] - pos >= mid) { 
        count++;
        pos = tables[i];
     }
     if (count == c) {
     return true;
     }
    }
    return false;
}


if (process.env.USER === "") {
    runProgram(``);
} else {
        process.stdin.resume();
  process.stdin.setEncoding("ascii");
  let read = "";
  process.stdin.on("data", function (input) {
        read += input;
  });
  process.stdin.on("end", function () {
        read = read.replace(/\n$/, "");
    read = read.replace(/\n$/, "");
    runProgram(read);
  });
  process.on("SIGINT", function () {
        read = read.replace(/\n$/, "");
    runProgram(read);
    process.exit(0);
  });
}