//Enter code here
//Enter code here

function runProgram(input){
    input =input.trim().split("\n")
    let tc=+input[0]
    let line=1
    for(let i=0;i<tc;i++){
        size=+input[line]
        line++
    A=input[line].trim().split(" ").map(Number)
    line++

    // console.log(siz,A)
    
let stack = {
  arr: [],
  top: -1,
 
  isEmpty: function() {
    return (this.top == -1)
  },

  size: function() {
    return (this.top + 1)
  },

  peek: function() {
    if (this.top == -1)
      return "stack is empty";

    return this.arr[this.top]
  },

  push: function(elem) {
    this.top++
    this.arr[this.top] = elem
  },

  pop: function() {
    if (this.top == -1)
      return "stack is empty";

    const temp = this.arr[this.top]
    this.top--
    return temp
  },
  
 }
 
let temp1=[]
let temp2=[]

let newarr1=[]
 for(let i=0;i<size;i++){
        while(stack.peek()<=A[i])
          stack.pop()
        if(stack.isEmpty())
          newarr1.push(-1)
        else
          newarr1.push(temp1[stack.peek()])
          
      stack.push(A[i])
      temp1[A[i]]=i
 }
//  console.log(newarr1)
 
 while(stack.size()!=0)
  stack.pop()

let newarr2=[]
 for(let i=size-1;i>=0;i--){
        while(stack.peek()<=A[i])
          stack.pop()
        if(stack.isEmpty())
          newarr2[i]=-1
        else
          newarr2[i]=temp2[stack.peek()]
      stack.push(A[i])
      temp2[A[i]]=i
 }


let str=""
 for(let i=0;i<size;i++){
     if(newarr1[i]==-1&& newarr2[i]==-1)
      str+=-1+" "
     else if(newarr1[i]==-1&& newarr2[i]!=-1)
     str+=A[newarr2[i]]+" "
     else if(newarr2[i]==-1&& newarr1[i]!=-1)
     str+=A[newarr1[i]]+" "
     else if(i-newarr1[i]<=newarr2[i]-i)
     str+=A[newarr1[i]]+" "
     else if(newarr2[i]-i<i-newarr1[i])
      str+=A[newarr2[i]]+" "
 }
console.log(str)

}
}


if (process.env.USER === "") {
    runProgram(``);
} else {
        process.stdin.resume();
  process.stdin.setEncoding("ascii");
  let read = "";
  process.stdin.on("data", function (input) {
        read += input;
  });
  process.stdin.on("end", function () {
        read = read.replace(/\n$/, "");
    read = read.replace(/\n$/, "");
    runProgram(read);
  });
  process.on("SIGINT", function () {
        read = read.replace(/\n$/, "");
    runProgram(read);
    process.exit(0);
  });
}